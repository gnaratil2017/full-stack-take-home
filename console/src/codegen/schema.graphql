schema {
  query: Query
  mutation: Mutation
}

"Requires that exactly one field must be supplied and that field must not be `null`."
directive @oneOf on INPUT_OBJECT

type Chatroom {
  callerPhoneNumber: String!
  description: String
  id: ID!
  label: String!
  natureCode: NatureCode
  resolved: Boolean!
}

type ChatroomNote {
  chatroom: Chatroom!
  content: String!
  createdAt: ISO8601DateTime!
  id: ID!
}

"""Autogenerated input type of CreateChatroom"""
input CreateChatroomInput {
  callerPhoneNumber: String!
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  description: String
  label: String!
  natureCodeId: ID
}

"""Autogenerated input type of CreateChatroomNote"""
input CreateChatroomNoteInput {
  chatroomId: ID!
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  content: String!
}

"""Autogenerated return type of CreateChatroomNote."""
type CreateChatroomNotePayload {
  chatroomNote: ChatroomNote!
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of CreateChatroom."""
type CreateChatroomPayload {
  chatroom: Chatroom!
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""An ISO 8601-encoded datetime"""
scalar ISO8601DateTime

type Mutation {
  createChatroom(
    """Parameters for CreateChatroom"""
    input: CreateChatroomInput!
  ): CreateChatroomPayload
  createChatroomNote(
    """Parameters for CreateChatroomNote"""
    input: CreateChatroomNoteInput!
  ): CreateChatroomNotePayload
  toggleChatroomResolved(
    """Parameters for ToggleChatroomResolved"""
    input: ToggleChatroomResolvedInput!
  ): ToggleChatroomResolvedPayload
  updateChatroomDescription(
    """Parameters for UpdateChatroomDescription"""
    input: UpdateChatroomDescriptionInput!
  ): UpdateChatroomDescriptionPayload
}

type NatureCode {
  id: ID!
  name: String!
}

type Query {
  chatroomNotes(chatroomId: ID!): [ChatroomNote!]!
  chatrooms(resolved: Boolean): [Chatroom!]!
  natureCodes: [NatureCode!]!
}

"""Autogenerated input type of ToggleChatroomResolved"""
input ToggleChatroomResolvedInput {
  chatroomId: ID!
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  resolved: Boolean!
}

"""Autogenerated return type of ToggleChatroomResolved."""
type ToggleChatroomResolvedPayload {
  chatroom: Chatroom!
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated input type of UpdateChatroomDescription"""
input UpdateChatroomDescriptionInput {
  chatroomId: ID!
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  newDescription: String
}

"""Autogenerated return type of UpdateChatroomDescription."""
type UpdateChatroomDescriptionPayload {
  chatroom: Chatroom!
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}